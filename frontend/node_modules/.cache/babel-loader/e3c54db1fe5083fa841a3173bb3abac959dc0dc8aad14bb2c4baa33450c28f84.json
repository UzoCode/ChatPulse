{"ast":null,"code":"var _jsxFileName = \"/home/ben/Documents/ChatPulse/backend/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketService from '../services/socketService';\nimport authService from '../services/authService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [conversationId, setConversationId] = useState(null);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      axios.get('/api/chat/conversations', {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`\n        }\n      }).then(response => {\n        if (response.data.length > 0) {\n          const conversation = response.data[0];\n          setConversationId(conversation.id);\n          socketService.joinRoom(conversation.id);\n          setMessages(conversation.messages);\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    socketService.onMessage(message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && conversationId) {\n      axios.post('/api/chat/messages', {\n        conversation_id: conversationId,\n        body: newMessage\n      }, {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`\n        }\n      }).then(response => {\n        setNewMessage('');\n        socketService.sendMessage(conversationId, response.data);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg.body\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"gXZCDYw51udx+ITSkQFJRM2IV+8=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","socketService","authService","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","conversationId","setConversationId","user","JSON","parse","localStorage","getItem","get","headers","Authorization","access_token","then","response","data","length","conversation","id","joinRoom","onMessage","message","prevMessages","handleSendMessage","e","preventDefault","post","conversation_id","body","sendMessage","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/ben/Documents/ChatPulse/backend/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketService from '../services/socketService';\nimport authService from '../services/authService';\nimport axios from 'axios';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [conversationId, setConversationId] = useState(null);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      axios.get('/api/chat/conversations', {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`\n        }\n      }).then(response => {\n        if (response.data.length > 0) {\n          const conversation = response.data[0];\n          setConversationId(conversation.id);\n          socketService.joinRoom(conversation.id);\n          setMessages(conversation.messages);\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    socketService.onMessage((message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n  }, []);\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && conversationId) {\n      axios.post('/api/chat/messages', {\n        conversation_id: conversationId,\n        body: newMessage,\n      }, {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`\n        }\n      }).then(response => {\n        setNewMessage('');\n        socketService.sendMessage(conversationId, response.data);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <ul>\n        {messages.map((msg, index) => (\n          <li key={index}>{msg.body}</li>\n        ))}\n      </ul>\n      <form onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}