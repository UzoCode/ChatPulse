{"ast":null,"code":"// src/components/Chat.js\nimport React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{io}from'socket.io-client';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Chat=()=>{const[isAuthenticated,setIsAuthenticated]=useState(true);// Replace with actual authentication check logic\nconst[username,setUsername]=useState('');const[messages,setMessages]=useState([]);const[message,setMessage]=useState('');const[socket,setSocket]=useState(null);const navigate=useNavigate();useEffect(()=>{// Check authentication status\nif(!isAuthenticated){navigate('/login');}},[isAuthenticated,navigate]);useEffect(()=>{// Retrieve username from localStorage after login/registration\nconst storedUsername=localStorage.getItem('username');if(storedUsername){setUsername(storedUsername);}// Establish the socket connection for real-time chat\nconst newSocket=io('http://localhost:5000');setSocket(newSocket);// Listen for incoming messages\nnewSocket.on('message',message=>{setMessages(prevMessages=>[...prevMessages,message]);});// Cleanup: Disconnect socket on component unmount\nreturn()=>{newSocket.disconnect();};},[]);const sendMessage=()=>{if(socket){socket.emit('message',message);setMessage('');// Clear input after sending\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[username&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome, \",username,\"! You are now in the chat space.\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"ul\",{children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"li\",{children:msg},index))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]});};export default Chat;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","io","jsxs","_jsxs","jsx","_jsx","Chat","isAuthenticated","setIsAuthenticated","username","setUsername","messages","setMessages","message","setMessage","socket","setSocket","navigate","storedUsername","localStorage","getItem","newSocket","on","prevMessages","disconnect","sendMessage","emit","children","map","msg","index","type","value","onChange","e","target","onClick"],"sources":["/home/ben/Documents/ChatPulse/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\n\nconst Chat = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // Replace with actual authentication check logic\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check authentication status\n    if (!isAuthenticated) {\n      navigate('/login');\n    }\n  }, [isAuthenticated, navigate]);\n\n  useEffect(() => {\n    // Retrieve username from localStorage after login/registration\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n\n    // Establish the socket connection for real-time chat\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n\n    // Listen for incoming messages\n    newSocket.on('message', (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    // Cleanup: Disconnect socket on component unmount\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (socket) {\n      socket.emit('message', message);\n      setMessage(''); // Clear input after sending\n    }\n  };\n\n  return (\n    <div>\n      {/* Welcome message */}\n      {username && <h2>Welcome, {username}! You are now in the chat space.</h2>}\n\n      {/* Real-time chat interface */}\n      <div>\n        <ul>\n          {messages.map((msg, index) => (\n            <li key={index}>{msg}</li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,EAAE,KAAQ,kBAAkB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAAE;AAC9D,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACgB,MAAM,CAAEC,SAAS,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAAAkB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd;AACA,GAAI,CAACS,eAAe,CAAE,CACpBU,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAAE,CAACV,eAAe,CAAEU,QAAQ,CAAC,CAAC,CAE/BnB,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAoB,cAAc,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACvD,GAAIF,cAAc,CAAE,CAClBR,WAAW,CAACQ,cAAc,CAAC,CAC7B,CAEA;AACA,KAAM,CAAAG,SAAS,CAAGpB,EAAE,CAAC,uBAAuB,CAAC,CAC7Ce,SAAS,CAACK,SAAS,CAAC,CAEpB;AACAA,SAAS,CAACC,EAAE,CAAC,SAAS,CAAGT,OAAO,EAAK,CACnCD,WAAW,CAAEW,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAEV,OAAO,CAAC,CAAC,CAC3D,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACXQ,SAAS,CAACG,UAAU,CAAC,CAAC,CACxB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAIV,MAAM,CAAE,CACVA,MAAM,CAACW,IAAI,CAAC,SAAS,CAAEb,OAAO,CAAC,CAC/BC,UAAU,CAAC,EAAE,CAAC,CAAE;AAClB,CACF,CAAC,CAED,mBACEX,KAAA,QAAAwB,QAAA,EAEGlB,QAAQ,eAAIN,KAAA,OAAAwB,QAAA,EAAI,WAAS,CAAClB,QAAQ,CAAC,kCAAgC,EAAI,CAAC,cAGzEN,KAAA,QAAAwB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CACGhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACvBzB,IAAA,OAAAsB,QAAA,CAAiBE,GAAG,EAAXC,KAAgB,CAC1B,CAAC,CACA,CAAC,cACLzB,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEnB,OAAQ,CACfoB,QAAQ,CAAGC,CAAC,EAAKpB,UAAU,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7C,CAAC,cACF3B,IAAA,WAAQ+B,OAAO,CAAEX,WAAY,CAAAE,QAAA,CAAC,MAAI,CAAQ,CAAC,EACxC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}