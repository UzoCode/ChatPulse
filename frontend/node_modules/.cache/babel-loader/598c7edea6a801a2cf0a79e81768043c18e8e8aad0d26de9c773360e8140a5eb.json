{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';// For navigation\nimport authService from'../services/authService';// Assuming authService handles login\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginForm=()=>{const[usernameOrEmail,setUsernameOrEmail]=useState('');// Allow both username and email\nconst[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();try{const credentials={usernameOrEmail,password};// Pass both username/email and password\n// Use either authService or axios based on your preference\n// Option 1: Using authService (assuming it handles login logic)\nawait authService.login(credentials);// Call login function from authService\n// Option 2: Using axios (direct API call)\n// const response = await axios.post('http://localhost:5000/api/login', credentials);\n// localStorage.setItem('token', response.data.token);\n// localStorage.setItem('username', response.data.username);\nsetError('');// Clear error message on successful login\nnavigate('/chat');// Redirect to chat after successful login\n}catch(err){setError('Invalid credentials');}};// Add your desired styling here\nreturn/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:usernameOrEmail,onChange:e=>setUsernameOrEmail(e.target.value),placeholder:\"Username or Email\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Password\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error})]});};export default LoginForm;","map":{"version":3,"names":["React","useState","useNavigate","authService","jsx","_jsx","jsxs","_jsxs","LoginForm","usernameOrEmail","setUsernameOrEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","credentials","login","err","onSubmit","children","type","value","onChange","target","placeholder","required"],"sources":["/home/ben/Documents/ChatPulse/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport authService from '../services/authService'; // Assuming authService handles login\n\nconst LoginForm = () => {\n  const [usernameOrEmail, setUsernameOrEmail] = useState(''); // Allow both username and email\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const credentials = { usernameOrEmail, password }; // Pass both username/email and password\n\n      // Use either authService or axios based on your preference\n      // Option 1: Using authService (assuming it handles login logic)\n      await authService.login(credentials); // Call login function from authService\n\n      // Option 2: Using axios (direct API call)\n      // const response = await axios.post('http://localhost:5000/api/login', credentials);\n      // localStorage.setItem('token', response.data.token);\n      // localStorage.setItem('username', response.data.username);\n\n      setError(''); // Clear error message on successful login\n      navigate('/chat'); // Redirect to chat after successful login\n    } catch (err) {\n      setError('Invalid credentials');\n    }\n  };\n\n  // Add your desired styling here\n\n  return (\n    <form onSubmit={handleLogin}>\n      <h2>Login</h2>\n      <input\n        type=\"text\"\n        value={usernameOrEmail}\n        onChange={(e) => setUsernameOrEmail(e.target.value)}\n        placeholder=\"Username or Email\"\n        required\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        required\n      />\n      <button type=\"submit\">Login</button>\n      {error && <p>{error}</p>}\n    </form>\n  );\n};\n\nexport default LoginForm;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAE;AAChD,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC5D,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAc,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAc,WAAW,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAC,WAAW,CAAG,CAAEV,eAAe,CAAEE,QAAS,CAAC,CAAE;AAEnD;AACA;AACA,KAAM,CAAAR,WAAW,CAACiB,KAAK,CAACD,WAAW,CAAC,CAAE;AAEtC;AACA;AACA;AACA;AAEAL,QAAQ,CAAC,EAAE,CAAC,CAAE;AACdC,QAAQ,CAAC,OAAO,CAAC,CAAE;AACrB,CAAE,MAAOM,GAAG,CAAE,CACZP,QAAQ,CAAC,qBAAqB,CAAC,CACjC,CACF,CAAC,CAED;AAEA,mBACEP,KAAA,SAAMe,QAAQ,CAAEN,WAAY,CAAAO,QAAA,eAC1BlB,IAAA,OAAAkB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdlB,IAAA,UACEmB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEhB,eAAgB,CACvBiB,QAAQ,CAAGT,CAAC,EAAKP,kBAAkB,CAACO,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE,CACpDG,WAAW,CAAC,mBAAmB,CAC/BC,QAAQ,MACT,CAAC,cACFxB,IAAA,UACEmB,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEd,QAAS,CAChBe,QAAQ,CAAGT,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE,CAC7CG,WAAW,CAAC,UAAU,CACtBC,QAAQ,MACT,CAAC,cACFxB,IAAA,WAAQmB,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,OAAK,CAAQ,CAAC,CACnCV,KAAK,eAAIR,IAAA,MAAAkB,QAAA,CAAIV,KAAK,CAAI,CAAC,EACpB,CAAC,CAEX,CAAC,CAED,cAAe,CAAAL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}